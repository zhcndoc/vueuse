import{C as e,S as t,T as n,V as r,td as i,w as a,y as o}from"./chunks/vue.DLm9j74-.js";import{t as s}from"./chunks/plugin-vue_export-helper.BDn6UvXA.js";var c={style:{display:`inline-block`},viewBox:`0 0 32 32`,width:`1.2em`,height:`1.2em`};function l(e,n){return r(),t(`svg`,c,[...n[0]||=[o(`path`,{fill:`currentColor`,d:`M29.25 6.76a6 6 0 0 0-8.5 0l1.42 1.42a4 4 0 1 1 5.67 5.67l-8 8a4 4 0 1 1-5.67-5.66l1.41-1.42l-1.41-1.42l-1.42 1.42a6 6 0 0 0 0 8.5A6 6 0 0 0 17 25a6 6 0 0 0 4.27-1.76l8-8a6 6 0 0 0-.02-8.48`},null,-1),o(`path`,{fill:`currentColor`,d:`M4.19 24.82a4 4 0 0 1 0-5.67l8-8a4 4 0 0 1 5.67 0A3.94 3.94 0 0 1 19 14a4 4 0 0 1-1.17 2.85L15.71 19l1.42 1.42l2.12-2.12a6 6 0 0 0-8.51-8.51l-8 8a6 6 0 0 0 0 8.51A6 6 0 0 0 7 28a6.07 6.07 0 0 0 4.28-1.76l-1.42-1.42a4 4 0 0 1-5.67 0`},null,-1)]])}var u=i({name:`carbon-link`,render:l});const d=JSON.parse(`{"title":"附加组件","description":"","frontmatter":{},"headers":[],"relativePath":"add-ons.md","filePath":"add-ons.md","lastUpdated":1732365828000}`);var f={name:`add-ons.md`},p={id:`head-vueuse-head`,tabindex:`-1`},m={id:`motion-vueuse-motion`,tabindex:`-1`},h={id:`gesture-vueuse-gesture`,tabindex:`-1`},g={id:`sound-vueuse-sound`,tabindex:`-1`},_={id:`schemaorg-vueuse-schema-org`,tabindex:`-1`};function v(i,s,c,l,d,f){let v=u;return r(),t(`div`,null,[s[25]||=o(`h1`,{id:`附加组件`,tabindex:`-1`},[a(`附加组件 `),o(`a`,{class:`header-anchor`,href:`#附加组件`,"aria-label":`Permalink to “附加组件”`},`​`)],-1),s[26]||=o(`p`,null,`核心包旨在轻量且无依赖，而附加组件则将流行的包封装成一致的 API 风格。`,-1),o(`h2`,p,[s[0]||=a(`Head - `,-1),s[1]||=o(`a`,{href:`https://github.com/vueuse/head`,target:`_blank`,rel:`noreferrer`},[o(`code`,null,`@vueuse/head`)],-1),s[2]||=a(),n(v,{class:`external-link`}),s[3]||=a(),s[4]||=o(`a`,{class:`header-anchor`,href:`#head-vueuse-head`,"aria-label":`Permalink to “Head - @vueuse/head”`},`​`,-1)]),s[27]||=o(`p`,null,[a(`用于 Vue 3 的文档头管理器。支持 SSR。由 `),o(`a`,{href:`https://github.com/egoist`,target:`_blank`,rel:`noreferrer`},`@egoist`),a(` 创建和维护。`)],-1),o(`h2`,m,[s[5]||=a(`Motion - `,-1),s[6]||=o(`a`,{href:`https://github.com/vueuse/motion`,target:`_blank`,rel:`noreferrer`},[o(`code`,null,`@vueuse/motion`)],-1),s[7]||=a(),n(v,{class:`external-link`}),s[8]||=a(),s[9]||=o(`a`,{class:`header-anchor`,href:`#motion-vueuse-motion`,"aria-label":`Permalink to “Motion - @vueuse/motion”`},`​`,-1)]),s[28]||=e(`<p><strong>Vue 组合式函数</strong>将你的<strong>组件</strong>进行<strong>动效</strong>化。</p><ul><li>🏎 基于 <a href="https://popmotion.io/" target="_blank" rel="noreferrer"><strong>Popmotion</strong></a> 的<strong>平滑动画</strong></li><li>🎮 <strong>声明式</strong> API</li><li>🚀 <strong>即插即用</strong>，支持 <strong>10+ 预设动画</strong></li><li>🚚 使用 <a href="https://github.com/Tahul/nuxt-use-motion" target="_blank" rel="noreferrer"><strong>nuxt-use-motion</strong></a> 支持 <strong>Nuxt</strong></li><li>✨ 使用 <strong>TypeScript</strong> 编写</li><li>🏋️‍♀️ 轻量级，<strong>&lt;20kb</strong> 大小</li></ul><blockquote><p>由 <a href="https://github.com/Tahul" target="_blank" rel="noreferrer">@Tahul</a> 创建和维护</p></blockquote>`,3),o(`h2`,h,[s[10]||=a(`Gesture - `,-1),s[11]||=o(`a`,{href:`https://github.com/vueuse/gesture`,target:`_blank`,rel:`noreferrer`},[o(`code`,null,`@vueuse/gesture`)],-1),s[12]||=a(),n(v,{class:`external-link`}),s[13]||=a(),s[14]||=o(`a`,{class:`header-anchor`,href:`#gesture-vueuse-gesture`,"aria-label":`Permalink to “Gesture - @vueuse/gesture”`},`​`,-1)]),s[29]||=e(`<p><strong>Vue 组合式工具库</strong>使你的应用程序具有<strong>交互性</strong></p><ul><li>🚀 <strong>即插即用</strong></li><li>🕹 <strong>鼠标</strong>和<strong>触摸</strong>支持</li><li>🎮 <strong>指令</strong>支持 (<strong>v-drag</strong>、<strong>v-pinch</strong>、<strong>v-move</strong> 等)</li><li>✨ 使用 <strong>TypeScript</strong> 编写</li><li>🤹 与 <a href="https://github.com/vueuse/motion" target="_blank" rel="noreferrer"><strong>vueuse/motion</strong></a> 或<strong>任何其他</strong>动画解决方案兼容</li></ul><blockquote><p>由 <a href="https://github.com/Tahul" target="_blank" rel="noreferrer">@Tahul</a> 创建和维护</p></blockquote>`,3),o(`h2`,g,[s[15]||=a(`Sound - `,-1),s[16]||=o(`a`,{href:`https://github.com/vueuse/sound`,target:`_blank`,rel:`noreferrer`},[o(`code`,null,`@vueuse/sound`)],-1),s[17]||=a(),n(v,{class:`external-link`}),s[18]||=a(),s[19]||=o(`a`,{class:`header-anchor`,href:`#sound-vueuse-sound`,"aria-label":`Permalink to “Sound - @vueuse/sound”`},`​`,-1)]),s[30]||=e(`<p>用于播放声音效果的 Vue 组合式工具库。</p><ul><li>👂 让你的网站使用 <strong>2 种人类感官</strong>进行<strong>交流</strong></li><li>🔥 使用 <strong>Vue</strong> 组合式 API 构建</li><li>🚚 使用 <a href="https://github.com/vueuse/sound#nuxt" target="_blank" rel="noreferrer"><strong>@vueuse/sound/nuxt</strong></a> 支持 <strong>Nuxt 3</strong></li><li>⚡️ 在你的<strong>捆绑包</strong>中仅有 <strong>&lt;1kb</strong> (gzip 压缩)！<strong>~10kb</strong> 异步加载。</li><li>✨ 使用 <strong>TypeScript</strong> 编写</li><li>🗣 使用经过充分测试的强大音频实用程序：<a href="https://howlerjs.com/" target="_blank" rel="noreferrer"><strong>Howler.js</strong></a></li></ul><blockquote><p>由 <a href="https://github.com/Tahul" target="_blank" rel="noreferrer">@Tahul</a> 创建和维护</p></blockquote>`,3),o(`h2`,_,[s[20]||=a(`SchemaOrg - `,-1),s[21]||=o(`a`,{href:`https://github.com/vueuse/schema-org`,target:`_blank`,rel:`noreferrer`},[o(`code`,null,`@vueuse/schema-org`)],-1),s[22]||=a(),n(v,{class:`external-link`}),s[23]||=a(),s[24]||=o(`a`,{class:`header-anchor`,href:`#schemaorg-vueuse-schema-org`,"aria-label":`Permalink to “SchemaOrg - @vueuse/schema-org”`},`​`,-1)]),s[31]||=e(`<p>用于 Vue 的 Schema.org。支持类型化和自动化的 Google 丰富结果</p><ul><li>😊 无需 Schema 知识，只需进行最少的配置即可在几分钟内上手</li><li>✨ 20+ 类型化模式，实现最佳实践 (<a href="https://developers.google.com/search/docs/advanced/structured-data/search-gallery" target="_blank" rel="noreferrer">Google</a>，<a href="https://developer.yoast.com/features/schema/overview" target="_blank" rel="noreferrer">Yoast</a>) 丰富结果</li><li>🧙 自动化 Schema：<code>@id</code>，URL / 日期解析，路由元数据等</li><li>🤝 集成为 <a href="https://vitepress.vue.com" target="_blank" rel="noreferrer">VitePress</a>，<a href="https://nuxtjs.org/" target="_blank" rel="noreferrer">Nuxt</a>，<a href="https://nuxtjs.org/" target="_blank" rel="noreferrer">Vitesse</a> 和 <a href="https://vitejs.dev/" target="_blank" rel="noreferrer">Vite</a> 提供自动导入</li><li>🍞 选择你喜欢的 API：组合式或组件</li><li>🌳 支持 SSR、tree-shaking 和模式继承</li></ul><blockquote><p>由 <a href="https://github.com/harlan-zw" target="_blank" rel="noreferrer">@harlan-zw</a> 创建和维护</p></blockquote><h2 id="router-vueuse-router" tabindex="-1">Router - <a href="/router/README.html"><code>@vueuse/router</code></a> <a class="header-anchor" href="#router-vueuse-router" aria-label="Permalink to “Router - @vueuse/router”">​</a></h2><p>vue-router 的实用工具</p><ul><li><a href="/router/useRouteHash/"><code>useRouteHash</code></a> — 对响应式的 <code>route.hash</code> 的简写。</li><li><a href="/router/useRouteParams/"><code>useRouteParams</code></a> — 对响应式的 <code>route.params</code> 的简写。</li><li><a href="/router/useRouteQuery/"><code>useRouteQuery</code></a> — 对响应式的 <code>route.query</code> 的简写。</li></ul><h2 id="integrations-vueuse-integrations" tabindex="-1">Integrations - <a href="/integrations/README.html"><code>@vueuse/integrations</code></a> <a class="header-anchor" href="#integrations-vueuse-integrations" aria-label="Permalink to “Integrations - @vueuse/integrations”">​</a></h2><p>实用程序库的集成包装器</p><ul><li><a href="/integrations/useAsyncValidator/"><code>useAsyncValidator</code></a> — 对 <a href="https://github.com/yiminghe/async-validator" target="_blank" rel="noreferrer"><code>async-validator</code></a> 的封装。</li><li><a href="/integrations/useAxios/"><code>useAxios</code></a> — 对 <a href="https://github.com/axios/axios" target="_blank" rel="noreferrer"><code>axios</code></a> 的封装。</li><li><a href="/integrations/useChangeCase/"><code>useChangeCase</code></a> — 对 <a href="https://github.com/blakeembrey/change-case" target="_blank" rel="noreferrer"><code>change-case</code></a> 的响应式封装。</li><li><a href="/integrations/useCookies/"><code>useCookies</code></a> — 对 <a href="https://www.npmjs.com/package/universal-cookie" target="_blank" rel="noreferrer"><code>universal-cookie</code></a> 的包装。</li><li><a href="/integrations/useDrauu/"><code>useDrauu</code></a> — 这是 <a href="https://github.com/antfu/drauu" target="_blank" rel="noreferrer">drauu</a> 的响应式实例。</li><li><a href="/integrations/useFocusTrap/"><code>useFocusTrap</code></a> — 这是 <a href="https://github.com/focus-trap/focus-trap" target="_blank" rel="noreferrer"><code>focus-trap</code></a> 的响应式封装。</li><li><a href="/integrations/useFuse/"><code>useFuse</code></a> — 使用 <a href="https://github.com/krisk/fuse" target="_blank" rel="noreferrer">Fuse.js</a> 组合式轻松实现模糊搜索。</li><li><a href="/integrations/useIDBKeyval/"><code>useIDBKeyval</code></a> — <a href="https://www.npmjs.com/package/idb-keyval" target="_blank" rel="noreferrer"><code>idb-keyval</code></a> 的封装。</li><li><a href="/integrations/useJwt/"><code>useJwt</code></a> — <a href="https://github.com/auth0/jwt-decode" target="_blank" rel="noreferrer"><code>jwt-decode</code></a> 的封装。</li><li><a href="/integrations/useNProgress/"><code>useNProgress</code></a> — <a href="https://github.com/rstacruz/nprogress" target="_blank" rel="noreferrer"><code>nprogress</code></a> 的响应式封装。</li><li><a href="/integrations/useQRCode/"><code>useQRCode</code></a> — <a href="https://github.com/soldair/node-qrcode" target="_blank" rel="noreferrer"><code>qrcode</code></a> 的封装。</li><li><a href="/integrations/useSortable/"><code>useSortable</code></a> — <a href="https://github.com/SortableJS/Sortable" target="_blank" rel="noreferrer"><code>sortable</code></a> 的封装。</li></ul><h2 id="rxjs-vueuse-rxjs" tabindex="-1">RxJS - <a href="/rxjs/README.html"><code>@vueuse/rxjs</code></a> <a class="header-anchor" href="#rxjs-vueuse-rxjs" aria-label="Permalink to “RxJS - @vueuse/rxjs”">​</a></h2><p>在 Vue 中启用 RxJS 反应函数</p><ul><li><a href="/rxjs/from/"><code>from</code></a> — rxJS 的 <a href="https://rxjs.dev/api/index/function/from" target="_blank" rel="noreferrer"><code>from()</code></a> 和 <a href="https://rxjs.dev/api/index/function/fromEvent" target="_blank" rel="noreferrer"><code>fromEvent()</code></a> 的包装器，使它们能够接受 <code>ref</code>。</li><li><a href="/rxjs/toObserver/"><code>toObserver</code></a> — sugar function to convert a <code>ref</code> into an RxJS <a href="https://rxjs.dev/guide/observer" target="_blank" rel="noreferrer">Observer</a></li><li><a href="/rxjs/useExtractedObservable/"><code>useExtractedObservable</code></a> — 从一个或多个组合式中提取并使用 RxJS <a href="https://rxjs.dev/guide/observable" target="_blank" rel="noreferrer"><code>Observable</code></a>，返回一个 <code>ref</code>，并在组件卸载时自动取消订阅。</li><li><a href="/rxjs/useObservable/"><code>useObservable</code></a> — 使用 RxJS <a href="https://rxjs.dev/guide/observable" target="_blank" rel="noreferrer"><code>Observable</code></a>，返回一个 <code>ref</code>，并在组件卸载时自动取消订阅。</li><li><a href="/rxjs/useSubject/"><code>useSubject</code></a> — 将 RxJS <a href="https://rxjs.dev/guide/subject" target="_blank" rel="noreferrer"><code>Subject</code></a> 绑定到一个 <code>ref</code> 上，并在两者之间传播值变化。</li><li><a href="/rxjs/useSubscription/"><code>useSubscription</code></a> — 使用 RxJS <a href="https://rxjs.dev/guide/subscription" target="_blank" rel="noreferrer"><code>Subscription</code></a>，无需担心取消订阅或创建内存泄漏。</li><li><a href="/rxjs/watchExtractedObservable/"><code>watchExtractedObservable</code></a> — 监视从一个或多个组合式中提取的 RxJS <a href="https://rxjs.dev/guide/observable" target="_blank" rel="noreferrer"><code>Observable</code></a> 的值。</li></ul><h2 id="firebase-vueuse-firebase" tabindex="-1">Firebase - <a href="/firebase/README.html"><code>@vueuse/firebase</code></a> <a class="header-anchor" href="#firebase-vueuse-firebase" aria-label="Permalink to “Firebase - @vueuse/firebase”">​</a></h2><p>启用 Firebase 的实时绑定功能</p><ul><li><a href="/firebase/useAuth/"><code>useAuth</code></a> — 响应式的 <a href="https://firebase.google.com/docs/auth" target="_blank" rel="noreferrer">Firebase Auth</a> 绑定。它提供了一个响应式的 <code>user</code> 和 <code>isAuthenticated</code>，因此你可以轻松地对用户的身份验证状态变化做出反应。</li><li><a href="/firebase/useFirestore/"><code>useFirestore</code></a> — 响应式的 <a href="https://firebase.google.com/docs/firestore" target="_blank" rel="noreferrer">Firestore</a> 绑定。使得<strong>始终将本地数据与远程数据库同步</strong>变得简单直观。</li><li><a href="/firebase/useRTDB/"><code>useRTDB</code></a> — 响应式的 <a href="https://firebase.google.com/docs/database" target="_blank" rel="noreferrer">Firebase 实时数据库</a>绑定。使得<strong>始终将本地数据与远程数据库同步</strong>变得简单直观。</li></ul><h2 id="electron-vueuse-electron" tabindex="-1">Electron - <a href="/electron/README.html"><code>@vueuse/electron</code></a> <a class="header-anchor" href="#electron-vueuse-electron" aria-label="Permalink to “Electron - @vueuse/electron”">​</a></h2><p>VueUse 的 Electron 渲染器进程模块</p><ul><li><a href="/electron/useIpcRenderer/"><code>useIpcRenderer</code></a> — 提供 <a href="https://www.electronjs.org/docs/api/ipc-renderer" target="_blank" rel="noreferrer">ipcRenderer</a> 及其所有 API。</li><li><a href="/electron/useIpcRendererInvoke/"><code>useIpcRendererInvoke</code></a> — 响应式的 <a href="https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererinvokechannel-args" target="_blank" rel="noreferrer">ipcRenderer.invoke API</a> 结果。使异步操作看起来像同步的。</li><li><a href="/electron/useIpcRendererOn/"><code>useIpcRendererOn</code></a> — 轻松使用 <a href="https://www.electronjs.org/docs/api/ipc-renderer#ipcrendereronchannel-listener" target="_blank" rel="noreferrer">ipcRenderer.on</a>，并在组件卸载时自动移除监听器 <a href="https://www.electronjs.org/docs/api/ipc-renderer#ipcrendererremovelistenerchannel-listener" target="_blank" rel="noreferrer">ipcRenderer.removeListener</a>。</li><li><a href="/electron/useZoomFactor/"><code>useZoomFactor</code></a> — 响应式的 <a href="https://www.electronjs.org/docs/api/web-frame#webframe" target="_blank" rel="noreferrer">WebFrame</a> 缩放因子。</li><li><a href="/electron/useZoomLevel/"><code>useZoomLevel</code></a> — 响应式的 <a href="https://www.electronjs.org/docs/api/web-frame#webframe" target="_blank" rel="noreferrer">WebFrame</a> 缩放级别。</li></ul>`,18)])}var y=s(f,[[`render`,v]]);export{d as __pageData,y as default};